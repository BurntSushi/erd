-- Initial erd.cabal generated by cabal init.  For further documentation,
-- see http://haskell.org/cabal/users-guide/

name:                erd
version:             0.2.1.0
homepage:            https://github.com/BurntSushi/erd
license:             PublicDomain
license-file:        UNLICENSE
author:              Andrew Gallant
maintainer:          jamslam@gmail.com
category:            Database, Development
build-type:          Simple
cabal-version:       >=1.10

Tested-With:         GHC ==8.6.4 || ==8.4.4 || ==8.8.3 || ==8.10.1

synopsis:
  An entity-relationship diagram generator from a plain text description.
description:
  erd transforms a plain text description of a relational database schema to a
  graphical representation of that schema. It is intended that the graph make
  use of common conventions when depicting entity-relationship diagrams,
  including modeling the cardinality of relationships between entities.
  .

  A quick example that transforms an `er` file to a PDF is just below. The
  original source file can be found amongst the examples in the repository.
  .
  > $ cat simple.er
  > # Entities are declared in '[' ... ']'. All attributes after the
  > # entity header up until the end of the file (or the next entity
  > # declaration) correspond to this entity.
  > # 
  > [Person]
  > *name
  > height
  > weight
  > +birth_location_id
  >
  > [Location]
  > *id
  > city
  > state
  > country
  >
  > # Each relationship must be between exactly two entities, which
  > # need not be distinct. Each entity in the relationship has
  > # exactly one of four possible cardinalities:
  > #
  > # Cardinality    Syntax
  > # 0 or 1         0
  > # exactly 1      1
  > # 0 or more      *
  > # 1 or more      +
  > Person *--1 Location
  > $ erd -i simple.er -o simple.pdf
  .
  The PDF should now contain a graph that looks like this:
  .
  <<http://burntsushi.net/stuff/erd-example-simple.png>>
  .
  See the <https://github.com/BurntSushi/erd#readme README.md> file for more
  examples and instructions on how to write ER files.

extra-source-files:
    changelog.md

source-repository head
  type: git
  location: git://github.com/BurntSushi/erd.git

executable erd
  default-language: Haskell2010
  hs-source-dirs: app, src
  other-modules: Erd.Config
               , Erd.ER
               , Erd.Parse
               , Erd.Render
               , Paths_erd
               , Text.Parsec.Erd.Parser
  main-is: Main.hs
  ghc-options: -Wall -W
  build-depends: base >= 4.5 && <5
               , directory >= 1.3.1.5
               , filepath >= 1.4.2
               , gitrev >= 1.3.1
               , graphviz >= 2999.20.0.4
               , text == 1.*
               , parsec == 3.1.*
               , containers >= 0.5.11.0
               , bytestring == 0.10.*
               , yaml >= 0.8.32
               , raw-strings-qq >= 1.1

test-suite spec
  default-language: Haskell2010
  type: exitcode-stdio-1.0
  main-is: Spec.hs
  ghc-options: -Wall -W
  hs-source-dirs:
      test, src
  other-modules: Erd.Config
               , Erd.ER
               , Erd.Parse
               , Erd.Render
               , Text.Parsec.Erd.Parser
               , Test.Erd.Render
               , Test.Text.Parsec.Erd.Parser
               , Paths_erd
  build-depends: base >=4.5 && <5
               , directory >= 1.3.1.5
               , filepath >= 1.4.2
               , gitrev >= 1.3.1
               , graphviz == 2999.*
               , text == 1.*
               , parsec == 3.1.*
               , containers >= 0.5.11.0
               , bytestring == 0.10.*
               , tasty >= 0.11
               , tasty-hunit >= 0.9
               , yaml >= 0.8.32
               , raw-strings-qq >= 1.1
